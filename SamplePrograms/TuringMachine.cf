class Cell
{
	char value;
	Cell left;
	Cell right;

	Cell(char c)
	{
		value = c;
	}

	bool HasLeft()
	{
		return isnull(left) == false;
	}

	bool HasRight()
	{
		return isnull(right) == false;
	}
}

class Tape
{
	Cell head;
	Cell current;
	char blank;

	Tape(char b)
	{
		head = new Cell(b);
		current = head;
		blank = b;
	}

	void MoveLeft()
	{
		if (current.HasLeft())
		{
			current = current.left;
		}
		else
		{
			Cell temp = new Cell(blank);
			current.left = temp;
			current = temp;
		}
	}

	void MoveRight()
	{
		if (current.HasRight())
		{
			current = current.right;
		}
		else
		{
			Cell temp = new Cell(blank);
			current.right = temp;
			current = temp;
		}
	}

	void Write(char c)
	{
		current.value = c;
	}

	void Init(string contents)
	{
		int length = slen(contents);
		for (int i = 0; i < length; i++)
		{
			char c = charAt(contents, i);
			Write(c);
			MoveRight();
		}
		/* reset the tape to the beginning */
		current = head;
	}

	/* Prints out the tape contents from left most to right. */
	void Debug()
	{
		int cellNumber = 0;
		Cell temp = head;
		bool done = false;

		/* find the left-most cell */
		while (done == false)
		{
			if (temp.HasLeft())
			{
				cellNumber--;
				temp = temp.left;
			}
			else
			{
				done = true;
			}
		}

		/* loop through all cells again */
		done = false;
		while (done == false)
		{
			println(cellNumber & ": " & temp.value);
			if (temp.HasRight())
			{
				cellNumber++;
				temp = temp.right;
			}
			else
			{
				done = true;
			}
		}
	}
}

class Transition
{
	int currentState;
	char currentSymbol;
	int targetState;
	char targetSymbol;
	char action;
	
	Transition(int cState, char cSymbol, int tState, char tSymbol, char a)
	{
		currentState = cState;
		currentSymbol = cSymbol;
		targetState = tState;
		targetSymbol = tSymbol;
		action = a;
	}
}

class Machine
{
	Tape tape;
	int initial; /* initial state number */
	int final; /* accepting state number */
	char[] alphabet;
	char blank;

	Machine()
	{
		
	}
}	

class program
{
	void main(string[] args)
	{
		Tape t = new Tape('\u005f');
		t.Init("Will loves Cindy!!");
		t.Debug();

		/*string input = args[0];
		println("Input file: " & input);

		Cell c = new Cell('\u005f');
		println("Cell's value is: " & c.value);

		Cell right = new Cell('\u0061');
		c.right = right;

		if (c.HasRight())
		{
			println("correct");
		}
		else
		{
			println("incorrect");
		}

		println("c.right.value = " & c.right.value);*/
	}
}